{"name":"Violation-comments-to-GitHub-maven-plugin","tagline":"A plugin for Maven that will find report files from static code analysis and comment pull requests in GItHub with them.","body":"# Violation Comments to GitHub Maven Plugin [![Build Status](https://travis-ci.org/tomasbjerre/violation-comments-to-github-maven-plugin.svg?branch=master)](https://travis-ci.org/tomasbjerre/violation-comments-to-github-maven-plugin) [![Maven Central](https://maven-badges.herokuapp.com/maven-central/se.bjurr.violations/violation-comments-to-github-maven-plugin/badge.svg)](https://maven-badges.herokuapp.com/maven-central/se.bjurr.violations/violation-comments-to-github-maven-plugin)\r\n\r\nThis is a Maven plugin for [Violation Comments to GitHub Lib](https://github.com/tomasbjerre/violation-comments-to-github-lib).\r\n\r\nIt can be used in Travis, or any other build server, to read results from static code analysis like Findbugs, PMD, Checkstyle, JSHint and/or CSSLint and comment pull requests in GitHub with them.\r\n\r\nYou can have a look at [violations-test](https://github.com/tomasbjerre/violations-test/pull/2) to see what the result may look like.\r\n\r\n## Usage ##\r\nThere is a running example [here](https://github.com/tomasbjerre/violation-comments-to-github-maven-plugin/tree/master/violation-comments-to-github-maven-plugin-example).\r\n\r\nHere is and example: \r\n\r\n```\r\n\t<plugin>\r\n\t\t<groupId>se.bjurr.violations</groupId>\r\n\t\t<artifactId>violation-comments-to-github-maven-plugin</artifactId>\r\n\t\t<version>1.1</version>\r\n\t\t<executions>\r\n\t\t\t<execution>\r\n\t\t\t\t<id>ViolationCommentsToGitHub</id>\r\n\t\t\t\t<goals>\r\n\t\t\t\t\t<goal>violation-comments</goal>\r\n\t\t\t\t</goals>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<username>${GITHUB_USERNAME}</username>\r\n\t\t\t\t\t<password>${GITHUB_PASSWORD}</password>\r\n\t\t\t\t\t<oAuth2Token>${GITHUB_OAUTH2TOKEN}</oAuth2Token>\r\n\t\t\t\t\t<pullRequestId>${GITHUB_PULLREQUESTID}</pullRequestId>\r\n\t\t\t\t\t<repositoryOwner>tomasbjerre</repositoryOwner>\r\n\t\t\t\t\t<repositoryName>violations-test</repositoryName>\r\n\t\t\t\t\t<gitHubUrl>https://api.github.com/</gitHubUrl>\r\n\t\t\t\t\t<createCommentWithAllSingleFileComments>false</createCommentWithAllSingleFileComments>\r\n\t\t\t\t\t<createSingleFileComments>true</createSingleFileComments>\r\n\t\t\t\t\t<violations>\r\n\t\t\t\t\t\t<violation>\r\n\t\t\t\t\t\t\t<violation>\r\n\t\t\t\t\t\t\t\t<reporter>FINDBUGS</reporter>\r\n\t\t\t\t\t\t\t\t<folder>.</folder>\r\n\t\t\t\t\t\t\t\t<pattern>.*/findbugs/.*\\.xml$</pattern>\r\n\t\t\t\t\t\t\t</violation>\r\n\t\t\t\t\t\t\t<violation>\r\n\t\t\t\t\t\t\t\t<reporter>PMD</reporter>\r\n\t\t\t\t\t\t\t\t<folder>.</folder>\r\n\t\t\t\t\t\t\t\t<pattern>.*/pmd/.*\\.xml$</pattern>\r\n\t\t\t\t\t\t\t</violation>\r\n\t\t\t\t\t\t\t<violation>\r\n\t\t\t\t\t\t\t\t<reporter>CHECKSTYLE</reporter>\r\n\t\t\t\t\t\t\t\t<folder>.</folder>\r\n\t\t\t\t\t\t\t\t<pattern>.*/checkstyle/.*\\.xml$</pattern>\r\n\t\t\t\t\t\t\t</violation>\r\n\t\t\t\t\t\t\t<violation>\r\n\t\t\t\t\t\t\t\t<reporter>JSHINT</reporter>\r\n\t\t\t\t\t\t\t\t<folder>.</folder>\r\n\t\t\t\t\t\t\t\t<pattern>.*/jshint/.*\\.xml$</pattern>\r\n\t\t\t\t\t\t\t</violation>\r\n\t\t\t\t\t\t\t<violation>\r\n\t\t\t\t\t\t\t\t<reporter>CSSLINT</reporter>\r\n\t\t\t\t\t\t\t\t<folder>.</folder>\r\n\t\t\t\t\t\t\t\t<pattern>.*/csslint/.*\\.xml$</pattern>\r\n\t\t\t\t\t\t\t</violation>\r\n\t\t\t\t\t\t</violation>\r\n\t\t\t\t\t</violations>\r\n\t\t\t\t</configuration>\r\n\t\t\t</execution>\r\n\t\t</executions>\r\n\t</plugin>\r\n```\r\n\r\nTo send violations, just run:\r\n```\r\nmvn violation-comments-to-github-maven-plugin:violation-comments -DGITHUB_PULLREQUESTID=$GITHUB_PULL_REQUEST -DGITHUB_USERNAME=... -DGITHUB_PASSWORD=...\r\n```\r\n\r\nOr if you want to use OAuth2:\r\n```\r\nmvn violation-comments-to-github-maven-plugin:violation-comments -DGITHUB_PULLREQUESTID=$GITHUB_PULL_REQUEST -DGITHUB_OAUTH2TOKEN=$GITHUB_OAUTH2TOKEN\r\n```\r\n\r\nYou may also have a look at [Violations Lib](https://github.com/tomasbjerre/violations-lib).\r\n\r\n## Developer instructions\r\n\r\nTo make a release, first run:\r\n```\r\nmvn release:prepare -DperformRelease=true\r\nmvn release:perform\r\n```\r\nThen release the artifact from [staging](https://oss.sonatype.org/#stagingRepositories). More information [here](http://central.sonatype.org/pages/releasing-the-deployment.html).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}